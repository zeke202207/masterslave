syntax = "proto3";

package SDK;

service MasterMonitorSDK {
  rpc Connect (ConnectRequest) returns (ConnectResponse){}
  rpc GetWorkers (GetWorkersRequest) returns (GetWorkersResponse) {}
  rpc GetWorkerInfo(WorkerInfoRequest) returns (WorkerInfoResponse) {}
  rpc GetJobTracker(JobTrackerRequest) returns (JobTrackerResponse) {}
}

message ConnectRequest {
	string userName = 1;
	string password = 2;
}

message ConnectResponse {
  bool isSuccess = 1;
  string errorMessage = 2;
  string Token = 3;
}

message GetWorkersRequest {
}

message GetWorkersResponse {
  bool isSuccess = 1;
  string errorMessage = 2;
  repeated Node nodes = 3;
}

message Node {
  string id = 1;
  string name = 2;
  string status = 3; 
  int64 lastUsed = 4; // Timestamp in Unix epoch milliseconds
}

// The request message for reporting status.
message WorkerInfoRequest {
	string id = 1;
}

// The response message for reporting status.
message WorkerInfoResponse {
  // Whether the operation was successful
	bool isSuccess = 1;
	string errorMessage = 2;
	int64 currentTime = 3;
	PlatformInfo platformInfo = 4;
	CpuInfo cpuInfo = 5;
	MemoryInfo memoryInfo = 6;
	repeated DiskInfo diskInfo = 7;
}

message PlatformInfo{
	string frameworkDescription = 1;
	string frameworkVersion = 2;
	string oSArchitecture = 3;
	string oSPlatformID = 4;
	string oSVersion = 5;
	string oSDescription = 6;
	string processArchitecture = 7;
	int32 processorCount = 8;
	string machineName = 9;
	string userName = 10;
	string userDomainName = 11;
	bool isUserInteractive = 12;
}

message CpuInfo{
	double cpuLoad = 1;
}

message MemoryInfo{
	uint64 totalPhysicalMemory = 1;
	uint64 availablePhysicalMemory = 2;
	uint64 usedPhysicalMemory = 3;
	uint64 totalVirtualMemory = 4;
	uint64 availableVirtualMemory = 5;
	uint64 usedVirtualMemory = 6;
}

message DiskInfo{
	string id = 1;
	string name = 2;
	string driveType = 3;
	string fileSystem = 4;
	int64 freeSpace = 5;
	int64 totalSize = 6;
	int64 usedSize = 7;
}

message JobTrackerRequest{
	string id = 1;
}

message JobTrackerResponse{
	// Whether the operation was successful
	bool isSuccess = 1;
	string errorMessage = 2;
	repeated JobTracker JobTracker = 3;
}

message JobTracker{
	string jobId = 1;
	string nodeId = 2;
	string nodeName = 3;
	int64 startTime = 4;
	int64 endTime = 5;
	string status = 6;
	string message = 7;
}